/* DO NOT EDIT THIS FILE - it is machine generated */
//#include <jni.h>
/* Header for class Cris_Currency */

#ifndef _Included_Cris_Currency
#define _Included_Cris_Currency
#ifdef __cplusplus
extern "C" {
#endif
#undef Cris_Currency_COMMUNICATION_FAILURE_NOTE
#define Cris_Currency_COMMUNICATION_FAILURE_NOTE 28L
#undef Cris_Currency_COMMUNICATION_FAILURE_COIN
#define Cris_Currency_COMMUNICATION_FAILURE_COIN 29L
#undef Cris_Currency_YET_NOT_CONNECTED_NOTE
#define Cris_Currency_YET_NOT_CONNECTED_NOTE 20L
#undef Cris_Currency_YET_NOT_CONNECTED_COIN
#define Cris_Currency_YET_NOT_CONNECTED_COIN 21L
/*
 * Class:     Cris_Currency
 * Method:    JniConnectPCSCService
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniConnectPCSCService
  (JNIEnv *, jclass);

/*
 * Class:     Cris_Currency
 * Method:    JniDisConnectPCSCService
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniDisConnectPCSCService
  (JNIEnv *, jclass);

/*
 * Class:     Cris_Currency
 * Method:    JniListPCSCSmartCardReader
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_Cris_Currency_JniListPCSCSmartCardReader
  (JNIEnv *, jclass);

/*
 * Class:     Cris_Currency
 * Method:    JniConnectPCSCSmartCardReader
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniConnectPCSCSmartCardReader
  (JNIEnv *, jclass);

/*
 * Class:     Cris_Currency
 * Method:    JniDisConnectPCSCSmartCardReader
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniDisConnectPCSCSmartCardReader
  (JNIEnv *, jclass);

/*
 * Class:     Cris_Currency
 * Method:    JniTransmitToPCSCSmartCardReader
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_Cris_Currency_JniTransmitToPCSCSmartCardReader
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     Cris_Currency
 * Method:    SetupCurrencyLogFile
 * Signature: (Ljava/lang/String;ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_Cris_Currency_SetupCurrencyLogFile
  (JNIEnv *, jclass, jstring, jint, jstring);

/*
 * Class:     Cris_Currency
 * Method:    SetupNoteAcceptorID
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_Cris_Currency_SetupNoteAcceptorID
  (JNIEnv *, jclass, jstring);

/*
 * Class:     Cris_Currency
 * Method:    SetupCoinAcceptorID
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_Cris_Currency_SetupCoinAcceptorID
  (JNIEnv *, jclass, jstring);

/*
 * Class:     Cris_Currency
 * Method:    SetupCoinEscrowID
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_Cris_Currency_SetupCoinEscrowID
  (JNIEnv *, jclass, jstring);

/*
 * Class:     Cris_Currency
 * Method:    SetupKioskSecurityID
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_Cris_Currency_SetupKioskSecurityID
  (JNIEnv *, jclass, jstring);

/*
 * Class:     Cris_Currency
 * Method:    SetupUPSID
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_Cris_Currency_SetupUPSID
  (JNIEnv *, jclass, jstring);

/*
 * Class:     Cris_Currency
 * Method:    SetupNativeLogFile
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_Cris_Currency_SetupNativeLogFile
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     Cris_Currency
 * Method:    SetuDevMode
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_Cris_Currency_SetuDevMode
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    EnableSingleCurrencyFlag
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_Cris_Currency_EnableSingleCurrencyFlag
  (JNIEnv *, jclass);

/*
 * Class:     Cris_Currency
 * Method:    DisableSingleCurrencyFlag
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_Cris_Currency_DisableSingleCurrencyFlag
  (JNIEnv *, jclass);

/*
 * Class:     Cris_Currency
 * Method:    JniActivateCCTalkPort
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniActivateCCTalkPort
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniDeActivateCCTalkPort
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniDeActivateCCTalkPort
  (JNIEnv *, jclass, jint);

/*
 * Class:     Cris_Currency
 * Method:    IsCCTALKPortBusy
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_IsCCTALKPortBusy
  (JNIEnv *, jclass);

/*
 * Class:     Cris_Currency
 * Method:    GetReplyFromCCTalkPort
 * Signature: ([BI[BI)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_GetReplyFromCCTalkPort___3BI_3BI
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jint);

/*
 * Class:     Cris_Currency
 * Method:    GetReplyFromCCTalkPort
 * Signature: ([BI[BII)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_GetReplyFromCCTalkPort___3BI_3BII
  (JNIEnv *, jclass, jbyteArray, jint, jbyteArray, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    IsCCTALKPortOpen
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_IsCCTALKPortOpen
  (JNIEnv *, jclass);

/*
 * Class:     Cris_Currency
 * Method:    SetCCTalkPollInterValTime
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_Cris_Currency_SetCCTalkPollInterValTime
  (JNIEnv *, jclass, jint);

/*
 * Class:     Cris_Currency
 * Method:    WriteLog
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_WriteLog
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     Cris_Currency
 * Method:    WriteDataExchangeLog
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_WriteDataExchangeLog
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     Cris_Currency
 * Method:    getTime
 * Signature: ()[J
 */
JNIEXPORT jlongArray JNICALL Java_Cris_Currency_getTime
  (JNIEnv *, jobject);

/*
 * Class:     Cris_Currency
 * Method:    WriteNativeLog
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_Cris_Currency_WriteNativeLog
  (JNIEnv *, jobject, jstring);

/*
 * Class:     Cris_Currency
 * Method:    JniConnectDevice
 * Signature: (IIII)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniConnectDevice
  (JNIEnv *, jobject, jint, jint, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniDisConnectDevice
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniDisConnectDevice
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniDeviceStatus
 * Signature: (II)[B
 */
JNIEXPORT jbyteArray JNICALL Java_Cris_Currency_JniDeviceStatus
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    getCashFirmwareVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Cris_Currency_getCashFirmwareVersion
  (JNIEnv *, jobject);

/*
 * Class:     Cris_Currency
 * Method:    getCoinFirmwareVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_Cris_Currency_getCoinFirmwareVersion
  (JNIEnv *, jobject);

/*
 * Class:     Cris_Currency
 * Method:    ClearJammedCurrenciesAccept
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_ClearJammedCurrenciesAccept
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    ClearJammedCurrenciesReject
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_ClearJammedCurrenciesReject
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniEnableTheseDenominations
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniEnableTheseDenominations
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniAcceptCurrencies
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_Cris_Currency_JniAcceptCurrencies
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniGetAcceptedAmount
 * Signature: ([[B)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniGetAcceptedAmount
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     Cris_Currency
 * Method:    JniStackAcceptedCurrencies
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniStackAcceptedCurrencies
  (JNIEnv *, jobject, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniReturnAcceptedCurrencies
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniReturnAcceptedCurrencies
  (JNIEnv *, jobject, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniGetValidCurrency
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniGetValidCurrency
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniAcceptCurrentCurrency
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniAcceptCurrentCurrency
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniReturnCurrentCurrency
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniReturnCurrentCurrency
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniIsNoteRemoved
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniIsNoteRemoved
  (JNIEnv *, jobject, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniClearJammedNotes
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniClearJammedNotes
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Cris_Currency
 * Method:    JniGetCurrencyAcceptorLastError
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniGetCurrencyAcceptorLastError
  (JNIEnv *, jobject);

/*
 * Class:     Cris_Currency
 * Method:    JniGetSecurityVersion
 * Signature: ([B)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniGetSecurityVersion
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     Cris_Currency
 * Method:    JniDisableAlarm
 * Signature: (IIIIB)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniDisableAlarm
  (JNIEnv *, jclass, jint, jint, jint, jint, jbyte);

/*
 * Class:     Cris_Currency
 * Method:    JniGetDoorStatus
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniGetDoorStatus
  (JNIEnv *, jclass, jint);

/*
 * Class:     Cris_Currency
 * Method:    SetupSecurityLogFile
 * Signature: (Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_Cris_Currency_SetupSecurityLogFile
  (JNIEnv *, jclass, jstring, jint, jstring, jstring);

/*
 * Class:     Cris_Currency
 * Method:    JniGetUPSStatus
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniGetUPSStatus
  (JNIEnv *, jclass);

/*
 * Class:     Cris_Currency
 * Method:    JniGetBatteryStatus
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Cris_Currency_JniGetBatteryStatus
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
